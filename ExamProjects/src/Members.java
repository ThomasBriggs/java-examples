
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Tom
 */
public class Members extends javax.swing.JFrame {

    /**
     * Creates new form Members
     */
    public Members() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jColorChooser1 = new javax.swing.JColorChooser();
        memberIDTxt = new javax.swing.JTextField();
        memberIDLbl = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        nameLbl = new javax.swing.JLabel();
        addressTxt = new javax.swing.JTextField();
        addressLbl = new javax.swing.JLabel();
        telephoneNumTxt = new javax.swing.JTextField();
        telephoneNumLbl = new javax.swing.JLabel();
        dateOfBirthTxt = new javax.swing.JTextField();
        dateOfBirthLbl = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        memberIDTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                memberIDTxtFocusLost(evt);
            }
        });

        memberIDLbl.setText("MemberID:");

        nameLbl.setText("Name:");

        addressLbl.setText("Address:");

        telephoneNumTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                telephoneNumTxtFocusLost(evt);
            }
        });

        telephoneNumLbl.setText("Telephone Number:");

        dateOfBirthLbl.setText("Date of Birth:");

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(telephoneNumLbl)
                        .addComponent(addressLbl, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dateOfBirthLbl, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(nameLbl)
                    .addComponent(memberIDLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(memberIDTxt)
                    .addComponent(nameTxt)
                    .addComponent(addressTxt)
                    .addComponent(telephoneNumTxt)
                    .addComponent(dateOfBirthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(searchBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(memberIDLbl)
                    .addComponent(memberIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameLbl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressLbl)
                    .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(telephoneNumLbl)
                    .addComponent(telephoneNumTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dateOfBirthLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateOfBirthTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(searchBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void telephoneNumTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_telephoneNumTxtFocusLost
        // TODO add your handling code here:
        if (presenceCheck(telephoneNumTxt)){
            if (!lengthCheck(telephoneNumTxt, 11)) {
                JOptionPane.showMessageDialog(null, "Please make sure you have entered an 11 digit number!");
            }
        }
    }//GEN-LAST:event_telephoneNumTxtFocusLost

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        String searchId = JOptionPane.showInputDialog("Please ebter the memberID you want to search for");
        String[] searchArray = new String[5];
        try {
            searchArray = open("membersDetails.txt", searchId);
        } catch (IOException ex) {
            ;
        }

        if (!(searchArray == null)){
            JOptionPane.showMessageDialog(null, "MemberID: " + searchArray[0] +
                ", Name: " + searchArray[1] +
                ", Address: " + searchArray[2] +
                ", Telephone Number: " + searchArray[3] +
                ", DOB: " + searchArray[4]);
        };
    }//GEN-LAST:event_searchBtnActionPerformed

    private void memberIDTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_memberIDTxtFocusLost
        // TODO add your handling code here:
        if (presenceCheck(memberIDTxt)) {
            if (!rangeCheck(memberIDTxt, 1, 100)){
                JOptionPane.showMessageDialog(null, "Please enter a MemberID from range 1 to 100!");
            }
        }
    }//GEN-LAST:event_memberIDTxtFocusLost

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        boolean validation = false;
        boolean presence = false;

        if (presenceCheck(memberIDTxt) &&
            presenceCheck(nameTxt) &&
            presenceCheck(addressTxt) &&
            presenceCheck(telephoneNumTxt) &&
            presenceCheck(dateOfBirthTxt)) {
            presence = true;
        }

        if (presence == true) {
            if (rangeCheck(memberIDTxt, 0, 100) &&
                lengthCheck(telephoneNumTxt, 11) &&
                dateFormatCheck(dateOfBirthTxt.getText())){
                validation = true;
            }
        }

        if (validation){
            try {
                save("membersDetails.txt");
            } catch (IOException ex){
            }
            setBlank(memberIDTxt);
            setBlank(nameTxt);
            setBlank(addressTxt);
            setBlank(telephoneNumTxt);
            setBlank(dateOfBirthTxt);
            JOptionPane.showMessageDialog(null, "Data saved to membersDetails.txt");
        }else {
            JOptionPane.showMessageDialog(null, "please check information on the form");
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    public static boolean presenceCheck(javax.swing.JTextField checkField) {
        if (checkField.getText().equals("")){
            return false;
        }else{
            return true;
        }
    }
    
    public static boolean lengthCheck(javax.swing.JTextField checkField, int length) {
       if (checkField.getText().length() == length) {
           return true;
       }else {
           return false;
       }
    }
    
    public static boolean rangeCheck(javax.swing.JTextField checkField, int rangeMin, int rangeMax) {
        int data = Integer.parseInt(checkField.getText());
        if (rangeMin < data && data < rangeMax){
            return true;
        }else {
            return false;
        }
    }
    
    public static boolean dateFormatCheck(String input) {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yy");
        Date date =null;
        try {
            date = dateFormat.parse(input);
            return true;
            
        }catch(ParseException e) {
            return false;
        }
    }
    
    public void save(String fileName) throws IOException {
        try {

            FileWriter writer = new FileWriter(fileName, true);
            writer.write (memberIDTxt.getText() + ",");
            writer.write (nameTxt.getText() + ",");
            writer.write (addressTxt.getText() + ",");
            writer.write (telephoneNumTxt.getText() + ",");
            writer.write (dateOfBirthTxt.getText() + "\n");
            writer.close();
        }

        catch (IOException ex) {
            System.out.println("Error " + fileName);
        }
        
    }
   
    public static void setBlank(javax.swing.JTextField selectedField) {
        selectedField.setText("");
    }
    
    public String[] open(String fileName, String searchId) throws IOException {
        
        String[] searchArray; 

        String lineRead = null;

        try {
            FileReader reader = new FileReader(fileName);
            BufferedReader buffer = new BufferedReader(reader);
            boolean found = false;
            while((lineRead = buffer.readLine())!= null){              
                searchArray = lineRead.split(",");
                if (searchArray[0].equals(searchId)){
                    found = true;
                    return searchArray;
                }
            }
            
            if (!found){
                JOptionPane.showMessageDialog(null, "MemberID could not be found!");
                
            }

            buffer.close();
            reader.close();

        }catch (IOException ex) {
            System.out.println("Error, " + fileName);
        }
        return null;

    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Members.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Members.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Members.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Members.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Members().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLbl;
    private javax.swing.JTextField addressTxt;
    private javax.swing.JLabel dateOfBirthLbl;
    private javax.swing.JTextField dateOfBirthTxt;
    private javax.swing.JColorChooser jColorChooser1;
    private javax.swing.JLabel memberIDLbl;
    private javax.swing.JTextField memberIDTxt;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JLabel telephoneNumLbl;
    private javax.swing.JTextField telephoneNumTxt;
    // End of variables declaration//GEN-END:variables
}
